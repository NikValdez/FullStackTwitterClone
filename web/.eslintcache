[{"/Users/nikolascochran/Desktop/twitter-clone/web/src/App.tsx":"1","/Users/nikolascochran/Desktop/twitter-clone/web/src/pages/Signup.tsx":"2","/Users/nikolascochran/Desktop/twitter-clone/web/src/pages/Login.tsx":"3","/Users/nikolascochran/Desktop/twitter-clone/web/src/components/Landing.tsx":"4","/Users/nikolascochran/Desktop/twitter-clone/web/src/components/IsAuthenticated.tsx":"5","/Users/nikolascochran/Desktop/twitter-clone/web/src/pages/Profile.tsx":"6","/Users/nikolascochran/Desktop/twitter-clone/web/src/styles/CustomModalStyles.ts":"7","/Users/nikolascochran/Desktop/twitter-clone/web/src/components/CreateProfile.tsx":"8","/Users/nikolascochran/Desktop/twitter-clone/web/src/components/UpdateProfile.tsx":"9","/Users/nikolascochran/Desktop/twitter-clone/web/src/components/LeftNav.tsx":"10","/Users/nikolascochran/Desktop/twitter-clone/web/src/components/Tweet.tsx":"11","/Users/nikolascochran/Desktop/twitter-clone/web/src/components/Logout.tsx":"12","/Users/nikolascochran/Desktop/twitter-clone/web/src/index.tsx":"13","/Users/nikolascochran/Desktop/twitter-clone/web/src/components/Users.tsx":"14","/Users/nikolascochran/Desktop/twitter-clone/web/src/styles/LogoutModal.ts":"15","/Users/nikolascochran/Desktop/twitter-clone/web/src/pages/Home.tsx":"16","/Users/nikolascochran/Desktop/twitter-clone/web/src/components/HomePageTweet.tsx":"17","/Users/nikolascochran/Desktop/twitter-clone/web/src/components/AllTweets.tsx":"18","/Users/nikolascochran/Desktop/twitter-clone/web/src/components/LikeTweet.tsx":"19"},{"size":1404,"mtime":1609362044234,"results":"20","hashOfConfig":"21"},{"size":2809,"mtime":1607990768944,"results":"22","hashOfConfig":"21"},{"size":2170,"mtime":1607990752362,"results":"23","hashOfConfig":"21"},{"size":1633,"mtime":1606782288422,"results":"24","hashOfConfig":"21"},{"size":603,"mtime":1606084351597,"results":"25","hashOfConfig":"21"},{"size":2574,"mtime":1609546462026,"results":"26","hashOfConfig":"21"},{"size":351,"mtime":1608667524181,"results":"27","hashOfConfig":"21"},{"size":2379,"mtime":1607991483610,"results":"28","hashOfConfig":"21"},{"size":4251,"mtime":1608664624100,"results":"29","hashOfConfig":"21"},{"size":1347,"mtime":1609012585861,"results":"30","hashOfConfig":"21"},{"size":2462,"mtime":1608667456533,"results":"31","hashOfConfig":"21"},{"size":1769,"mtime":1609284115258,"results":"32","hashOfConfig":"21"},{"size":500,"mtime":1604448183287,"results":"33","hashOfConfig":"21"},{"size":490,"mtime":1605058438881,"results":"34","hashOfConfig":"21"},{"size":374,"mtime":1609010829527,"results":"35","hashOfConfig":"21"},{"size":1180,"mtime":1609363397065,"results":"36","hashOfConfig":"21"},{"size":1447,"mtime":1609363778393,"results":"37","hashOfConfig":"21"},{"size":1996,"mtime":1609546596867,"results":"38","hashOfConfig":"21"},{"size":655,"mtime":1609547084754,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3habhz",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nikolascochran/Desktop/twitter-clone/web/src/App.tsx",[],"/Users/nikolascochran/Desktop/twitter-clone/web/src/pages/Signup.tsx",["84"],"import { gql, useMutation } from \"@apollo/client\"\nimport { ErrorMessage, Field, Form, Formik } from \"formik\"\nimport React from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport * as Yup from \"yup\"\nimport TwitterLogo from \"../styles/assets/twitter-logo.png\"\nimport \"../styles/login.css\"\n\nconst SIGNUP_MUTATION = gql`\n  mutation signup($name: String, $email: String!, $password: String!) {\n    signup(name: $name, email: $email, password: $password) {\n      token\n    }\n  }\n`\n\ninterface SignupValues {\n  email: string\n  password: string\n  confirmPassword: string\n  name: string\n}\n\nfunction Signup() {\n  const history = useHistory()\n  const [signup, { data }] = useMutation(SIGNUP_MUTATION)\n\n  const initialValues: SignupValues = {\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    name: \"\",\n  }\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email(\"Invalid email address\")\n      .required(\"Email Required\"),\n    password: Yup.string()\n      .max(20, \"Must be 20 characters or less\")\n      .required(\"Password Required\"),\n    confirmPassword: Yup.string().oneOf(\n      [Yup.ref(\"password\")],\n      \"Passwords must match\"\n    ),\n    name: Yup.string()\n      .max(15, \"Must be 15 characters or less\")\n      .required(\"Name Required\"),\n  })\n\n  return (\n    <div className=\"container\">\n      <img\n        src={TwitterLogo}\n        alt=\"logo\"\n        style={{ width: \"50px\" }}\n        className=\"logo\"\n      />\n      <h3>Sign up</h3>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting }) => {\n          setSubmitting(true)\n          const response = await signup({\n            variables: values,\n          })\n          localStorage.setItem(\"token\", response.data.signup.token)\n          setSubmitting(false)\n          history.push(\"/users\")\n        }}\n      >\n        <Form>\n          <Field name=\"email\" type=\"text\" placeholder=\"Email\" />\n          <ErrorMessage name=\"email\" component={\"div\"} />\n          <Field name=\"name\" type=\"text\" placeholder=\"Name\" />\n          <ErrorMessage name=\"name\" component={\"div\"} />\n          <Field name=\"password\" type=\"password\" placeholder=\"Password\" />\n          <ErrorMessage name=\"password\" component={\"div\"} />\n          <Field\n            name=\"confirmPassword\"\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n          />\n          <ErrorMessage name=\"confirmPassword\" component={\"div\"} />\n          <button type=\"submit\" className=\"login-button\">\n            <span>Sign up</span>\n          </button>\n        </Form>\n      </Formik>\n      <div className=\"register\">\n        <h4>Already have an account?</h4>\n        <Link to=\"/login\">Log in</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Signup\n",["85","86"],"/Users/nikolascochran/Desktop/twitter-clone/web/src/pages/Login.tsx",["87"],"import { gql, useMutation } from \"@apollo/client\"\nimport { ErrorMessage, Field, Form, Formik } from \"formik\"\nimport React from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport * as Yup from \"yup\"\nimport TwitterLogo from \"../styles/assets/twitter-logo.png\"\nimport \"../styles/login.css\"\n\nconst LOGIN_MUTATION = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`\n\ninterface LoginValues {\n  email: string\n  password: string\n}\n\nfunction Login() {\n  const history = useHistory()\n  const [login, { data }] = useMutation(LOGIN_MUTATION)\n\n  const initialValues: LoginValues = {\n    email: \"\",\n    password: \"\",\n  }\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email(\"Invalid email address\")\n      .required(\"Email Required\"),\n    password: Yup.string()\n      .max(20, \"Must be 20 characters or less\")\n      .required(\"Password Required\"),\n  })\n\n  return (\n    <div className=\"container\">\n      <img\n        src={TwitterLogo}\n        alt=\"logo\"\n        style={{ width: \"50px\" }}\n        className=\"logo\"\n      />\n      <h3>Log in to Fake Twitter</h3>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting }) => {\n          setSubmitting(true)\n          const response = await login({\n            variables: values,\n          })\n          localStorage.setItem(\"token\", response.data.login.token)\n          setSubmitting(false)\n          history.push(\"/users\")\n        }}\n      >\n        <Form>\n          <Field name=\"email\" type=\"text\" placeholder=\"Email\" />\n          <ErrorMessage name=\"email\" component={\"div\"} />\n\n          <Field name=\"password\" type=\"password\" placeholder=\"Password\" />\n          <ErrorMessage name=\"password\" component={\"div\"} />\n\n          <button type=\"submit\" className=\"login-button\">\n            <span>Login</span>\n          </button>\n        </Form>\n      </Formik>\n      <div className=\"register\">\n        <h4>Don't have an account?</h4>\n        <Link to=\"/signup\">Sign up</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","/Users/nikolascochran/Desktop/twitter-clone/web/src/components/Landing.tsx",[],"/Users/nikolascochran/Desktop/twitter-clone/web/src/components/IsAuthenticated.tsx",[],"/Users/nikolascochran/Desktop/twitter-clone/web/src/pages/Profile.tsx",[],"/Users/nikolascochran/Desktop/twitter-clone/web/src/styles/CustomModalStyles.ts",[],"/Users/nikolascochran/Desktop/twitter-clone/web/src/components/CreateProfile.tsx",[],"/Users/nikolascochran/Desktop/twitter-clone/web/src/components/UpdateProfile.tsx",[],"/Users/nikolascochran/Desktop/twitter-clone/web/src/components/LeftNav.tsx",[],"/Users/nikolascochran/Desktop/twitter-clone/web/src/components/Tweet.tsx",[],["88","89"],"/Users/nikolascochran/Desktop/twitter-clone/web/src/components/Logout.tsx",[],"/Users/nikolascochran/Desktop/twitter-clone/web/src/index.tsx",[],"/Users/nikolascochran/Desktop/twitter-clone/web/src/components/Users.tsx",[],["90","91"],"/Users/nikolascochran/Desktop/twitter-clone/web/src/styles/LogoutModal.ts",[],"/Users/nikolascochran/Desktop/twitter-clone/web/src/pages/Home.tsx",["92","93"],"import { gql, useQuery } from \"@apollo/client\"\nimport React from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport AllTweets from \"../components/AllTweets\"\nimport HomPageTweet from \"../components/HomePageTweet\"\nimport LeftNav from \"../components/LeftNav\"\nimport \"../styles/home.css\"\nimport \"../styles/primary.css\"\n\nexport const ME_QUERY = gql`\n  query me {\n    me {\n      id\n      name\n      Profile {\n        id\n        bio\n        location\n        website\n        avatar\n      }\n    }\n  }\n`\n\nfunction Home() {\n  const history = useHistory()\n  const { loading, error, data } = useQuery(ME_QUERY)\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>{error.message}</p>\n  return (\n    <>\n      <div className=\"primary\">\n        <div className=\"left\">\n          <LeftNav />\n        </div>\n        <div className=\"home\">\n            <div className=\"home-header\">\n                <h3 className=\"home-title\">Home</h3>\n                <HomPageTweet/>\n                <AllTweets/>\n            </div>\n        </div>\n        <div className=\"right\">\n          Right\n          {/* <PopularNetworks /> */}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Home\n","/Users/nikolascochran/Desktop/twitter-clone/web/src/components/HomePageTweet.tsx",[],"/Users/nikolascochran/Desktop/twitter-clone/web/src/components/AllTweets.tsx",[],"/Users/nikolascochran/Desktop/twitter-clone/web/src/components/LikeTweet.tsx",[],{"ruleId":"94","severity":1,"message":"95","line":26,"column":20,"nodeType":"96","messageId":"97","endLine":26,"endColumn":24},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"94","severity":1,"message":"95","line":24,"column":19,"nodeType":"96","messageId":"97","endLine":24,"endColumn":23},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"98","replacedBy":"104"},{"ruleId":"100","replacedBy":"105"},{"ruleId":"94","severity":1,"message":"106","line":27,"column":9,"nodeType":"96","messageId":"97","endLine":27,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":28,"column":27,"nodeType":"96","messageId":"97","endLine":28,"endColumn":31},"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["107"],"no-negated-in-lhs",["108"],["107"],["108"],["107"],["108"],"'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]